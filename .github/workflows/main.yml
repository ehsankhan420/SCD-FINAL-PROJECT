name: Deploy to Minikube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List workspace files
        run: |
          echo "Listing repository content..."
          dir
          echo "Checking for Kubernetes files..."
          dir *.yaml
        shell: cmd
        continue-on-error: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        run: |
          echo "Building Docker images..."
          
          :: Build frontend image
          echo "Building frontend image..."
          docker build -t undergroundehsan/book-management-frontend:latest -f Dockerfile .
          
          :: Build backend image
          echo "Building backend image..."
          docker build -t undergroundehsan/book-management-backend:latest -f backend/Dockerfile ./backend
        shell: cmd

      - name: Push Docker images
        run: |
          echo "Pushing images to Docker Hub..."
          docker push undergroundehsan/book-management-frontend:latest
          docker push undergroundehsan/book-management-backend:latest
        shell: cmd

      - name: Reset and start Minikube
        run: |
          echo "Stopping any running Minikube..."
          minikube stop
          
          echo "Deleting previous Minikube cluster..."
          minikube delete
          
          echo "Starting Minikube with fewer resources..."
          minikube start --memory=2048 --cpus=2 --driver=docker
          
          echo "Checking Minikube status..."
          minikube status
          
          echo "Setting kubectl context to minikube..."
          minikube update-context
          
          echo "Waiting for Minikube to be ready..."
          timeout /t 30
        shell: cmd
        continue-on-error: true

      - name: Deploy simple app to Minikube
        run: |
          echo "Deploying basic workload to Minikube..."
          
          :: Create a simple deployment
          echo apiVersion: apps/v1 > simple-deployment.yaml
          echo kind: Deployment >> simple-deployment.yaml
          echo metadata: >> simple-deployment.yaml
          echo   name: frontend >> simple-deployment.yaml
          echo spec: >> simple-deployment.yaml
          echo   replicas: 1 >> simple-deployment.yaml
          echo   selector: >> simple-deployment.yaml
          echo     matchLabels: >> simple-deployment.yaml
          echo       app: frontend >> simple-deployment.yaml
          echo   template: >> simple-deployment.yaml
          echo     metadata: >> simple-deployment.yaml
          echo       labels: >> simple-deployment.yaml
          echo         app: frontend >> simple-deployment.yaml
          echo     spec: >> simple-deployment.yaml
          echo       containers: >> simple-deployment.yaml
          echo       - name: frontend >> simple-deployment.yaml
          echo         image: nginx:latest >> simple-deployment.yaml
          echo         ports: >> simple-deployment.yaml
          echo         - containerPort: 80 >> simple-deployment.yaml
          
          :: Create service
          echo apiVersion: v1 > simple-service.yaml
          echo kind: Service >> simple-service.yaml
          echo metadata: >> simple-service.yaml
          echo   name: frontend-service >> simple-service.yaml
          echo spec: >> simple-service.yaml
          echo   selector: >> simple-service.yaml
          echo     app: frontend >> simple-service.yaml
          echo   ports: >> simple-service.yaml
          echo   - port: 80 >> simple-service.yaml
          echo     targetPort: 80 >> simple-service.yaml
          echo   type: ClusterIP >> simple-service.yaml
          
          :: Apply using minikube kubectl
          echo "Applying deployments using minikube kubectl..."
          minikube kubectl -- apply -f simple-deployment.yaml
          minikube kubectl -- apply -f simple-service.yaml
          
          echo "Checking deployment status..."
          minikube kubectl -- get deployments
          minikube kubectl -- get pods
          minikube kubectl -- get services
          
          echo "Deployment completed!"
        shell: cmd
        continue-on-error: true

      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          minikube kubectl -- get all
          
          echo "Getting Pod details..."
          minikube kubectl -- get pods
          
          echo "Minikube IP address:"
          minikube ip
          
          echo "Deployment verification completed!"
          
          echo "To access the application, use:"
          echo "minikube service frontend-service --url"
        shell: cmd
        continue-on-error: true

      - name: Attach Minikube logs
        if: ${{ always() }}
        run: |
          echo "Collecting Minikube logs for debugging..."
          minikube logs > minikube-logs.txt
          echo "Logs saved to minikube-logs.txt"
          type minikube-logs.txt
        shell: cmd
        continue-on-error: true 
